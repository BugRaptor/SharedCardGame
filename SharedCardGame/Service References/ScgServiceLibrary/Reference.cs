//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharedCardGame.ScgServiceLibrary {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MouseEventDataType", Namespace="http://schemas.datacontract.org/2004/07/ScgServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class MouseEventDataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Windows.Forms.MouseButtons MouseButtonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SharedCardGame.ScgServiceLibrary.MouseEventType MouseEventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Point MouseLocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Windows.Forms.MouseButtons MouseButton {
            get {
                return this.MouseButtonField;
            }
            set {
                if ((this.MouseButtonField.Equals(value) != true)) {
                    this.MouseButtonField = value;
                    this.RaisePropertyChanged("MouseButton");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SharedCardGame.ScgServiceLibrary.MouseEventType MouseEventType {
            get {
                return this.MouseEventTypeField;
            }
            set {
                if ((this.MouseEventTypeField.Equals(value) != true)) {
                    this.MouseEventTypeField = value;
                    this.RaisePropertyChanged("MouseEventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Point MouseLocation {
            get {
                return this.MouseLocationField;
            }
            set {
                if ((this.MouseLocationField.Equals(value) != true)) {
                    this.MouseLocationField = value;
                    this.RaisePropertyChanged("MouseLocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MouseEventType", Namespace="http://schemas.datacontract.org/2004/07/ScgServiceLibrary")]
    public enum MouseEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MouseDown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MouseUp = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MouseMove = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WatchdogDataType", Namespace="http://schemas.datacontract.org/2004/07/ScgServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class WatchdogDataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientCommandDataType", Namespace="http://schemas.datacontract.org/2004/07/ScgServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class ClientCommandDataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SharedCardGame.ScgServiceLibrary.ClientCommandType ClientCommandTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DealingClockwiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfCardsToDealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SharedObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Rectangle TargetRectangleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SharedCardGame.ScgServiceLibrary.ClientCommandType ClientCommandType {
            get {
                return this.ClientCommandTypeField;
            }
            set {
                if ((this.ClientCommandTypeField.Equals(value) != true)) {
                    this.ClientCommandTypeField = value;
                    this.RaisePropertyChanged("ClientCommandType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DealingClockwise {
            get {
                return this.DealingClockwiseField;
            }
            set {
                if ((this.DealingClockwiseField.Equals(value) != true)) {
                    this.DealingClockwiseField = value;
                    this.RaisePropertyChanged("DealingClockwise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfCardsToDeal {
            get {
                return this.NumberOfCardsToDealField;
            }
            set {
                if ((this.NumberOfCardsToDealField.Equals(value) != true)) {
                    this.NumberOfCardsToDealField = value;
                    this.RaisePropertyChanged("NumberOfCardsToDeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SharedObjectId {
            get {
                return this.SharedObjectIdField;
            }
            set {
                if ((this.SharedObjectIdField.Equals(value) != true)) {
                    this.SharedObjectIdField = value;
                    this.RaisePropertyChanged("SharedObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Rectangle TargetRectangle {
            get {
                return this.TargetRectangleField;
            }
            set {
                if ((this.TargetRectangleField.Equals(value) != true)) {
                    this.TargetRectangleField = value;
                    this.RaisePropertyChanged("TargetRectangle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientCommandType", Namespace="http://schemas.datacontract.org/2004/07/ScgServiceLibrary")]
    public enum ClientCommandType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResetCmd = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeavingCmd = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GatheringCmd = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtractFirstCardCmd = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShuffleUpCmd = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestDealingParametersCmd = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CancelDealingParametersDialogCmd = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DealCmd = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountCardsCmd = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContextualMenuClosedCmd = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatMessageDataType", Namespace="http://schemas.datacontract.org/2004/07/ScgServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class ChatMessageDataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChatMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChatMessage {
            get {
                return this.ChatMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatMessageField, value) != true)) {
                    this.ChatMessageField = value;
                    this.RaisePropertyChanged("ChatMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateChangeEventDataType", Namespace="http://schemas.datacontract.org/2004/07/ScgServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class StateChangeEventDataType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DealingClockwiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Rectangle GatheringRectangleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrabbingClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageBoxTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageToDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Point NewSharedObjectLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewSharedObjectPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfCardsToDealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivateOwnerClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleasingClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SharedObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Size SharedObjectSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SharedCardGame.ScgServiceLibrary.StateChangeEventType StateChangeEventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ToEveryoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DealingClockwise {
            get {
                return this.DealingClockwiseField;
            }
            set {
                if ((this.DealingClockwiseField.Equals(value) != true)) {
                    this.DealingClockwiseField = value;
                    this.RaisePropertyChanged("DealingClockwise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Rectangle GatheringRectangle {
            get {
                return this.GatheringRectangleField;
            }
            set {
                if ((this.GatheringRectangleField.Equals(value) != true)) {
                    this.GatheringRectangleField = value;
                    this.RaisePropertyChanged("GatheringRectangle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrabbingClientName {
            get {
                return this.GrabbingClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GrabbingClientNameField, value) != true)) {
                    this.GrabbingClientNameField = value;
                    this.RaisePropertyChanged("GrabbingClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageBoxTitle {
            get {
                return this.MessageBoxTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageBoxTitleField, value) != true)) {
                    this.MessageBoxTitleField = value;
                    this.RaisePropertyChanged("MessageBoxTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageToDisplay {
            get {
                return this.MessageToDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageToDisplayField, value) != true)) {
                    this.MessageToDisplayField = value;
                    this.RaisePropertyChanged("MessageToDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Point NewSharedObjectLocation {
            get {
                return this.NewSharedObjectLocationField;
            }
            set {
                if ((this.NewSharedObjectLocationField.Equals(value) != true)) {
                    this.NewSharedObjectLocationField = value;
                    this.RaisePropertyChanged("NewSharedObjectLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewSharedObjectPicture {
            get {
                return this.NewSharedObjectPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.NewSharedObjectPictureField, value) != true)) {
                    this.NewSharedObjectPictureField = value;
                    this.RaisePropertyChanged("NewSharedObjectPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfCardsToDeal {
            get {
                return this.NumberOfCardsToDealField;
            }
            set {
                if ((this.NumberOfCardsToDealField.Equals(value) != true)) {
                    this.NumberOfCardsToDealField = value;
                    this.RaisePropertyChanged("NumberOfCardsToDeal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivateOwnerClientName {
            get {
                return this.PrivateOwnerClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateOwnerClientNameField, value) != true)) {
                    this.PrivateOwnerClientNameField = value;
                    this.RaisePropertyChanged("PrivateOwnerClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipientClientName {
            get {
                return this.RecipientClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientClientNameField, value) != true)) {
                    this.RecipientClientNameField = value;
                    this.RaisePropertyChanged("RecipientClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleasingClientName {
            get {
                return this.ReleasingClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleasingClientNameField, value) != true)) {
                    this.ReleasingClientNameField = value;
                    this.RaisePropertyChanged("ReleasingClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SharedObjectId {
            get {
                return this.SharedObjectIdField;
            }
            set {
                if ((this.SharedObjectIdField.Equals(value) != true)) {
                    this.SharedObjectIdField = value;
                    this.RaisePropertyChanged("SharedObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Size SharedObjectSize {
            get {
                return this.SharedObjectSizeField;
            }
            set {
                if ((this.SharedObjectSizeField.Equals(value) != true)) {
                    this.SharedObjectSizeField = value;
                    this.RaisePropertyChanged("SharedObjectSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SharedCardGame.ScgServiceLibrary.StateChangeEventType StateChangeEventType {
            get {
                return this.StateChangeEventTypeField;
            }
            set {
                if ((this.StateChangeEventTypeField.Equals(value) != true)) {
                    this.StateChangeEventTypeField = value;
                    this.RaisePropertyChanged("StateChangeEventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ToEveryone {
            get {
                return this.ToEveryoneField;
            }
            set {
                if ((this.ToEveryoneField.Equals(value) != true)) {
                    this.ToEveryoneField = value;
                    this.RaisePropertyChanged("ToEveryone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateChangeEventType", Namespace="http://schemas.datacontract.org/2004/07/ScgServiceLibrary")]
    public enum StateChangeEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoStateChange = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewSharedObject = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisposeSharedObject = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SharedObjectMove = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowGatheringRectangle = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HideGatheringRectangle = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenContextualMenuOnSharedObject = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenDealingParametersDialog = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowMessage = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScgServiceLibrary.IScgBroadcastorService", CallbackContract=typeof(SharedCardGame.ScgServiceLibrary.IScgBroadcastorServiceCallback))]
    public interface IScgBroadcastorService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/RegisterClient")]
        void RegisterClient(string clientName, int clientProtocolVersion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/RegisterClient")]
        System.Threading.Tasks.Task RegisterClientAsync(string clientName, int clientProtocolVersion);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/NotifyServer")]
        void NotifyServer(SharedCardGame.ScgServiceLibrary.MouseEventDataType mouseEventData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/NotifyServer")]
        System.Threading.Tasks.Task NotifyServerAsync(SharedCardGame.ScgServiceLibrary.MouseEventDataType mouseEventData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/NotifyServerWatchdog")]
        void NotifyServerWatchdog(SharedCardGame.ScgServiceLibrary.WatchdogDataType watchdogData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/NotifyServerWatchdog")]
        System.Threading.Tasks.Task NotifyServerWatchdogAsync(SharedCardGame.ScgServiceLibrary.WatchdogDataType watchdogData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/NotifyServerCmd")]
        void NotifyServerCmd(SharedCardGame.ScgServiceLibrary.ClientCommandDataType clientCommandData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/NotifyServerCmd")]
        System.Threading.Tasks.Task NotifyServerCmdAsync(SharedCardGame.ScgServiceLibrary.ClientCommandDataType clientCommandData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/NotifyServerChatMessage")]
        void NotifyServerChatMessage(SharedCardGame.ScgServiceLibrary.ChatMessageDataType chatMessageData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/NotifyServerChatMessage")]
        System.Threading.Tasks.Task NotifyServerChatMessageAsync(SharedCardGame.ScgServiceLibrary.ChatMessageDataType chatMessageData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScgBroadcastorServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/BroadcastToClient")]
        void BroadcastToClient(SharedCardGame.ScgServiceLibrary.StateChangeEventDataType stateChangeEventData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/BroadcastChatMessageToClient")]
        void BroadcastChatMessageToClient(SharedCardGame.ScgServiceLibrary.ChatMessageDataType chatMessageData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScgBroadcastorService/BroadcastBadProtocolVersion")]
        void BroadcastBadProtocolVersion(int serverProtocolVersion);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScgBroadcastorServiceChannel : SharedCardGame.ScgServiceLibrary.IScgBroadcastorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScgBroadcastorServiceClient : System.ServiceModel.DuplexClientBase<SharedCardGame.ScgServiceLibrary.IScgBroadcastorService>, SharedCardGame.ScgServiceLibrary.IScgBroadcastorService {
        
        public ScgBroadcastorServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ScgBroadcastorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ScgBroadcastorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ScgBroadcastorServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ScgBroadcastorServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterClient(string clientName, int clientProtocolVersion) {
            base.Channel.RegisterClient(clientName, clientProtocolVersion);
        }
        
        public System.Threading.Tasks.Task RegisterClientAsync(string clientName, int clientProtocolVersion) {
            return base.Channel.RegisterClientAsync(clientName, clientProtocolVersion);
        }
        
        public void NotifyServer(SharedCardGame.ScgServiceLibrary.MouseEventDataType mouseEventData) {
            base.Channel.NotifyServer(mouseEventData);
        }
        
        public System.Threading.Tasks.Task NotifyServerAsync(SharedCardGame.ScgServiceLibrary.MouseEventDataType mouseEventData) {
            return base.Channel.NotifyServerAsync(mouseEventData);
        }
        
        public void NotifyServerWatchdog(SharedCardGame.ScgServiceLibrary.WatchdogDataType watchdogData) {
            base.Channel.NotifyServerWatchdog(watchdogData);
        }
        
        public System.Threading.Tasks.Task NotifyServerWatchdogAsync(SharedCardGame.ScgServiceLibrary.WatchdogDataType watchdogData) {
            return base.Channel.NotifyServerWatchdogAsync(watchdogData);
        }
        
        public void NotifyServerCmd(SharedCardGame.ScgServiceLibrary.ClientCommandDataType clientCommandData) {
            base.Channel.NotifyServerCmd(clientCommandData);
        }
        
        public System.Threading.Tasks.Task NotifyServerCmdAsync(SharedCardGame.ScgServiceLibrary.ClientCommandDataType clientCommandData) {
            return base.Channel.NotifyServerCmdAsync(clientCommandData);
        }
        
        public void NotifyServerChatMessage(SharedCardGame.ScgServiceLibrary.ChatMessageDataType chatMessageData) {
            base.Channel.NotifyServerChatMessage(chatMessageData);
        }
        
        public System.Threading.Tasks.Task NotifyServerChatMessageAsync(SharedCardGame.ScgServiceLibrary.ChatMessageDataType chatMessageData) {
            return base.Channel.NotifyServerChatMessageAsync(chatMessageData);
        }
    }
}
